<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAAgA8AABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVBSUlJSQDAwMWAAAAA+Pj4wBkZGQALy8vABwc
        HAAwMDAAaGhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRUVE9rq6u2rS0tM6Xl5emenp6eFhY
        WEsuLi4mAAAADQAAAACrq6sAUVFRACYmJgAgICAAOTk5AK+vrwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3d3Tu7u7///////r6
        +v/u7u7/3Nzc+cXFxeWsrKzFlJSUmnZ2dmtTU1NANzc3HgAAAAj///8Ah4eHAEJCQgAgICAAISEhAFtb
        WwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClZWVo/n5
        +f///////////////////////////+/v7/+9vb3/l5eX/3x8fPVpaWndbW1tuoGBgY1qampeQkJCNQsL
        CxYAAAAE////AG5ubgA2NjYAHR0dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsL
        CxC0tLTM///////////////////////////Nzc3/mJiY/7y8vP/f39//5eXl/9TU1P+pqan/mZmZ/9DQ
        0P7Q0NDvt7e31Jubm65+fn6AXl5eUjU1NSsMDAwKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHx8fLIWFherFxcX/4ODg//T09P//////0dHR/5qamv/t7e3/+/v7/+jo6P//////////////
        ///R0dH/nJyc//Pz8///////+/v7//Dw8P/f39/7xMTE6XV1dX0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABdXV1Tt7e3+7Kysv+ZmZn/kJCQ/5WVlf+Dg4P/6urq///////V1dX/dHR0/8TE
        xP/+/v7////////////ExMT/sbGx///////////////////////29vb/iIiIjwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBAE9PT4Gurq7/19fX/+vr6//x8fH/vb29/6CgoP///////////7q6
        uv+/v7//q6ur/7CwsP/5+fn///////f39/+ampr/9PT0/////////////////+Tk5P1oaGheAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFioqKr7+/v/+kpKT/k5OT/4SEhP99fX3/ubm5////
        ///+/v7/o6Oj/+Pj4//9/f3/tbW1/6CgoP/x8fH//////5+fn//Gxsb/8vLy//7+/v//////0dHR70JC
        QjUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBd0dHTWvr6+/9nZ2f/j4+P/iIiI/6Wl
        pf+0tLT///////b29v+ampr/6enp/9nZ2f+0tLT/e3t7/9LS0v//////mJiY/4uLi/+RkZH/l5eX/62t
        rf+SkpLUGBgYFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkAASEhIARkZGNa+vr/C6urr/oKCg/42N
        jf9ubm7/lJSU/39/f//7+/v/6+vr/3p6ev+cnJz/s7Oz/9TU1P/x8fH//v7+//Ly8v+EhIT/39/f//Dw
        8P/k5OT/x8fH/2lpaa0ODg4EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw8ABEREQtTU1Nx3d3d/f//
        /////////Pz8/+rq6v/Nzc3/lpaW/729vf/7+/v/5ubm//b29v//////////////////////t7e3/4iI
        iP+Wlpb/kpKS/6Ojo/+1tbX/cXFxf0RERAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLy8IOTk5lk5O
        Tu+YmJj/oKCg/7S0tP/Pz8//6urq//v7+//4+Pj/p6en/7q6uv/19fX/////////////////8/Pz/66u
        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
        wH////D////8//////8=
</value>
  </data>
</root>